@* @inject NavigationManager NavigationManager

<MudTable Class="mt-8" Items="@Releases" OnRowClick="RowClickEvent" T="ReleaseAnswer">
    <HeaderContent>
        <MudTh>Платформа</MudTh>
        <MudTh>Версия</MudTh>
        <MudTh>Релизная задача</MudTh>
        <MudTh>Статус релиза</MudTh>
        <MudTh>Дата изменения</MudTh>
        <MudTh>Дата завершения</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Platform">@context.PlatformName</MudTd>
        <MudTd DataLabel="Version">@context.Version</MudTd>
        <MudTd DataLabel="releaseTask">Sample text</MudTd>
        <MudTd DataLabel="releaseStatus">@context.Status</MudTd>
        <MudTd DataLabel="DateOfChange">@context.UpdateDate</MudTd>
        <MudTd DataLabel="DateOfCompletion">@context.CompleteDate</MudTd>
        <MudTd>
            <MudButton Color="Color.Primary" OnClick="ClickShowMore">Show more</MudButton>
        </MudTd>
    </RowTemplate>
</MudTable>

@if (SelectRelease is not null)
{
    <MudText>@SelectRelease.ReleaseId</MudText>
}

@code
{
    private List<ReleaseAnswer> Releases { get; set; }
    private ReleaseAnswer SelectRelease { get; set; } = null;
    // [CascadingParameter]
    // public List<ReleaseAnswer> temp { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Releases = await ReleaseManager.GetAll();

        /*var releases = await Client.GetFromJsonAsync<IEnumerable<ReleaseAnswer>>(Routes.Server.ReleaseController + "all");*/
    }

    private void ClickShowMore()
    {

    }

    private void RowClickEvent(TableRowClickEventArgs<ReleaseAnswer> tableRowClickEventArgs)
    {
        SelectRelease = tableRowClickEventArgs.Item;
        NavigationManager.NavigateTo($"/info/{SelectRelease.ReleaseId}");
    }



    // Releases.Add(new ReleaseAnswer("1.1.1" , "Testing" , Ы"10.11.2022", "Android","10.11.2022", "GG"));
} *@